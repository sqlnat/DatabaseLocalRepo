public void Main()
{
// TODO: Add your code here
 
            ConnectionManager cm;
            string sqlString = "";
 
            System.IO.StreamWriter file = new System.IO.StreamWriter(@"C:\SSIS_JSON_GEN\JSONOutput.txt");
 
            sqlString = "Select top 100 SalesOrderID ,OrderDate ,SalesOrderNumber ,CustomerID from [Sales].[SalesOrderHeader] for JSON 
 
AUTO";
            System.Data.SqlClient.SqlConnection sqlConn;
            System.Data.SqlClient.SqlCommand sqlComm;
 
            cm = Dts.Connections["Localhost_Staging"];
 
            sqlConn = (System.Data.SqlClient.SqlConnection)cm.AcquireConnection(Dts.Transaction);
            sqlComm = new System.Data.SqlClient.SqlCommand(sqlString, sqlConn);
            System.Data.SqlClient.SqlDataReader reader = sqlComm.ExecuteReader();
            try
            {
                while (reader.Read())
                {
                    file.WriteLine(reader[0]);
                }
            }
            finally
            {
                // Always call Close when done reading.
                reader.Close();
            }
 
            cm.ReleaseConnection(sqlConn);
Dts.TaskResult = (int)ScriptResults.Success;
}
 
 
===============================================================
 
Create proc GetSalesDetails
as
Select SH.SalesOrderID 'SalesHeader.SalesOrderID'  ,SH.OrderDate 'SalesHeader.OrderDate',SH.SalesOrderNumber 
 
'SalesHeader.SalesOrderNumber',
SH.CustomerID 'SalesHeader.CustomerID',
JSON_QUERY(( Select 
SalesOrderDetailID 'OrderDetail.SalesOrderDetailID',SD.ProductID 'OrderDetail.ProductID',SD.LineTotal  
 
'OrderDetail.LineTotal' 
from [Sales].[SalesOrderDetail] SD
Where SH.SalesOrderID = SD.SalesOrderID
For JSON PATH , Without_Array_Wrapper 
)) SalesOrderDetails
from [Sales].[SalesOrderHeader] SH 
For JSON PATH
 
=======================================================
public void Main()
{
// TODO: Add your code here
 
            ConnectionManager cm;
            string sqlString = Dts.Variables["User::strSQLStatement"].Value.ToString();
            string OutputFileName = Dts.Variables["User::strOutputFileName"].Value.ToString();
 
            System.IO.StreamWriter file = new System.IO.StreamWriter(OutputFileName);
 
            System.Data.SqlClient.SqlConnection sqlConn;
            //System.Data.OleDb.OleDbConnection sqlConn;
            //System.Data.OleDb.OleDbCommand sqlComm;
            System.Data.SqlClient.SqlCommand sqlComm;
 
            cm = Dts.Connections["Localhost_Staging"];
 
            sqlConn = (System.Data.SqlClient.SqlConnection)cm.AcquireConnection(Dts.Transaction);
            sqlComm = new System.Data.SqlClient.SqlCommand(sqlString, sqlConn);
            //sqlComm.ExecuteNonQuery();
            //sqlConn.Open();
            System.Data.SqlClient.SqlDataReader reader = sqlComm.ExecuteReader();
            try
            {
                while (reader.Read())
                {
                    //Console.WriteLine(String.Format("{0}, {1}",reader[0], reader[1]));
                    file.WriteLine(reader[0]);
                }
            }
            finally
            {
                // Always call Close when done reading.
                reader.Close();
            }
 
            cm.ReleaseConnection(sqlConn);
Dts.TaskResult = (int)ScriptResults.Success;
}